@model TWork.Models.ViewModels.RoleEditModel

@{
    ViewBag.Title = "EditRole";
}

<div class="panel-body"><h4>Edit Role</h4></div>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditRole">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="TeamId" class="control-label"></label>
                <input asp-for="TeamId" readonly="readonly" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="RoleId" class="control-label"></label>
                <input asp-for="RoleId" readonly="readonly" class="form-control" />
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsDefaultRole" readonly="readonly" hidden="hidden" /> @Html.DisplayNameFor(model => model.IsDefaultRole)
                </label>
            </div>
            @if (Model.IsDefaultRole)
            {
                <div class="form-group">
                    <label asp-for="RoleName" class="control-label"></label>
                    <input asp-for="RoleName" readonly="readonly" class="form-control" />
                </div>
                <div class="form-group">
                    <label asp-for="RoleDescription" class="control-label"></label>
                    <input asp-for="RoleDescription" readonly="readonly" class="form-control" />
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="CanCreateTask" readonly="readonly" /> @Html.DisplayNameFor(model => model.CanCreateTask)
                    </label>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="CanAssignTask" readonly="readonly" /> @Html.DisplayNameFor(model => model.CanAssignTask)
                    </label>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="CanComment" readonly="readonly" /> @Html.DisplayNameFor(model => model.CanComment)
                    </label>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="CanManageUsers" readonly="readonly" /> @Html.DisplayNameFor(model => model.CanManageUsers)
                    </label>
                </div>
            }
            else
            {
                <div class="form-group">
                    <label asp-for="RoleName" class="control-label"></label>
                    <input asp-for="RoleName" class="form-control" />
                    <span asp-validation-for="RoleName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="RoleDescription" class="control-label"></label>
                    <input asp-for="RoleDescription" class="form-control" />
                    <span asp-validation-for="RoleDescription" class="text-danger"></span>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="CanCreateTask" /> @Html.DisplayNameFor(model => model.CanCreateTask)
                    </label>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="CanAssignTask" /> @Html.DisplayNameFor(model => model.CanAssignTask)
                    </label>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="CanComment" /> @Html.DisplayNameFor(model => model.CanComment)
                    </label>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="CanManageUsers" /> @Html.DisplayNameFor(model => model.CanManageUsers)
                    </label>
                </div>
            }

            <h6 class="bg-info panel-body">Members</h6>
            <table class="table table-bordered table-condensed">
                @if (Model.RoleMembers.Count() == 0)
                {
                    <tr><td colspan="2">No Users Are Members</td></tr>
                }
                else
                {
                    @foreach (RoleEditMemberModel member in Model.RoleMembers)
                    {
                        <tr>
                            <td>@member.MemberName</td>
                            <td>
                                <input class="form-check-input" asp-for="@member.MemberId" readonly="readonly" hidden="hidden" value="@member.MemberId" />
                                <input class="form-check-input" asp-for="@member.MemberName" readonly="readonly" hidden="hidden" value="@member.MemberName" />
                                <input class="form-check-input" asp-for="@member.IsMember" />
                            </td>
                        </tr>
                    }
                }
            </table>

            <h6 class="bg-info panel-body">NonMembers</h6>
            <table class="table table-bordered table-condensed">
                @if (Model.OtherTeamMembers.Count() == 0)
                {
                    <tr><td colspan="2">All Users Are Members</td></tr>
                }
                else
                {
                    @foreach (RoleEditMemberModel nonMember in Model.OtherTeamMembers)
                    {
                        <tr>
                            <td>@nonMember.MemberName</td>
                            <td>
                                <input class="form-check-input" asp-for="@nonMember.MemberId" readonly="readonly" hidden="hidden" value="@nonMember.MemberId" />
                                <input class="form-check-input" asp-for="@nonMember.MemberName" readonly="readonly" hidden="hidden" value="@nonMember.MemberName" />
                                <input class="form-check-input" asp-for="@nonMember.IsMember" />
                            </td>
                        </tr>
                    }
                }
            </table>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" asp-route-teamId="@Model.TeamId">Back to List</a>
</div>

