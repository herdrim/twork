@model TWork.Models.ViewModels.RoleEditModel

@{
    ViewBag.Title = "EditRole";
}

<div class="panel-body"><h4>Edit Role</h4></div>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditRole">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="TeamId" class="control-label"></label>
                <input asp-for="TeamId" readonly="readonly" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="RoleId" class="control-label"></label>
                <input asp-for="RoleId" readonly="readonly" class="form-control" />
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsDefaultRole" readonly="readonly" hidden="hidden" /> @Html.DisplayNameFor(model => model.IsDefaultRole)
                </label>
            </div>
            @if (Model.IsDefaultRole)
            {
                <div class="form-group">
                    <label asp-for="RoleName" class="control-label"></label>
                    <input asp-for="RoleName" readonly="readonly" class="form-control" />
                </div>
                <div class="form-group">
                    <label asp-for="RoleDescription" class="control-label"></label>
                    <input asp-for="RoleDescription" readonly="readonly" class="form-control" />
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="CanCreateTask" disabled readonly="readonly" /> @Html.DisplayNameFor(model => model.CanCreateTask)
                    </label>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="CanAssignTask" disabled readonly="readonly" /> @Html.DisplayNameFor(model => model.CanAssignTask)
                    </label>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="CanComment" disabled readonly="readonly" /> @Html.DisplayNameFor(model => model.CanComment)
                    </label>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="CanManageUsers" disabled readonly="readonly" /> @Html.DisplayNameFor(model => model.CanManageUsers)
                    </label>
                </div>
            }
            else
            {
                <div class="form-group">
                    <label asp-for="RoleName" class="control-label"></label>
                    <input asp-for="RoleName" class="form-control" />
                    <span asp-validation-for="RoleName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="RoleDescription" class="control-label"></label>
                    <input asp-for="RoleDescription" class="form-control" />
                    <span asp-validation-for="RoleDescription" class="text-danger"></span>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="CanCreateTask" /> @Html.DisplayNameFor(model => model.CanCreateTask)
                    </label>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="CanAssignTask" /> @Html.DisplayNameFor(model => model.CanAssignTask)
                    </label>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="CanComment" /> @Html.DisplayNameFor(model => model.CanComment)
                    </label>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="CanManageUsers" /> @Html.DisplayNameFor(model => model.CanManageUsers)
                    </label>
                </div>
            }
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" asp-route-teamId="@Model.TeamId">Back to List</a>
</div>

